#!/usr/bin/env bash

set -eux -o pipefail

# DEV PACKAGES

echo '[*] Adding i386 architecture'
sudo dpkg --add-architecture i386
sudo apt-get update

echo '[*] Installing dev packages'
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
    build-essential   \
    multiarch-support \
    gcc-multilib      \
    checkinstall      \
    curl              \
    docker.io         \
    gdb               \
    git               \
    libssl-dev        \
    python            \
    python-pip        \
    python3-pip       \
    python3-dev       \
    libffi-dev        \
    ruby-full         \
    cargo

# TERMINAL UTILS

echo '[*] Installing terminal utils'
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
	tmux  		\
	vim   		\
	xclip 		\
	zsh   		\
	fonts-powerline

echo '[*] Installing vimrc'
rm -rf ~/.vim_runtime
git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
sh ~/.vim_runtime/install_awesome_vimrc.sh
echo "set number" >> ~/.vim_runtime/vimrcs/basic.vim
echo "set colorcolumn=80" >> ~/.vim_runtime/vimrcs/basic.vim

echo '[*] Installing Oh My Tmux!'
rm -rf ~/.tmux
git clone https://github.com/gpakosz/.tmux.git ~/.tmux
pushd ~
ln -s -f .tmux/.tmux.conf
cp .tmux/.tmux.conf.local .
popd

echo '[*] Installing Oh My Zsh!'
rm -rf ~/.oh-my-zsh
RUNZSH=no sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
sed -i -e 's/robbyrussell/agnoster/g' ~/.zshrc

# PYTHON ENVIRONMENTS

echo '[*] Setting up virtualenv'
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y virtualenv
export ENVS=~/.envs
mkdir -p $ENVS

echo '[*] Setting up pwn-py2 virtualenv'
virtualenv -p $(which python) $ENVS/pwn-py2
VIRTUAL_ENV_DISABLE_PROMPT=true source $ENVS/pwn-py2/bin/activate
pip install --upgrade \
    flake8          \
    pwntools        \
    capstone        \
    filebytes       \
    keystone-engine \
    ropper
deactivate

# ANALYSIS TOOLS

echo '[*] Installing pwndbg'
rm -rf ~/pwndbg
git clone https://github.com/pwndbg/pwndbg.git ~/pwndbg
pushd ~/pwndbg
./setup.sh
popd
echo "source ~/pwndbg/gdbinit.py" > ~/.gdbinit_pwndbg

echo '[*] Installing GEF'
mkdir -p ~/gef
wget -q -O ~/gef/gdbinit-gef.py https://github.com/hugsy/gef/raw/master/gef.py
echo "source ~/gef/gdbinit-gef.py" > ~/.gdbinit_gef

echo '[*] Setting up ~/.gdbinit'
echo "define init-pwndbg" > ~/.gdbinit
echo "source ~/.gdbinit_pwndbg" >> ~/.gdbinit
echo "end" >> ~/.gdbinit
echo "define init-gef" >> ~/.gdbinit
echo "source ~/.gdbinit_gef" >> ~/.gdbinit
echo "end" >> ~/.gdbinit

echo '[*] Installing one-gadget'
sudo gem install one_gadget

echo '[*] Installing seccomp-tools'
sudo gem install seccomp-tools

# MISC

echo '[*] Installing mdBook'
cargo install --git https://github.com/rust-lang/mdBook.git mdbook
echo "export PATH=~/.cargo/bin:\$PATH" >> .zshrc
